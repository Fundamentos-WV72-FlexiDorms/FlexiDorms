services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    restart: always
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    container_name: keycloak
    command: start-dev
    ports:
      - "9090:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KC_ADMIN_USER:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD:-admin}
      KEYCLOAK_JDBC_PARAMS: 'sslmode=require'

  config-service:
    container_name: config-service
    build: ./config-service
    ports:
      - "8888:8888"
    environment:
      GIT_USERNAME: ${GIT_USERNAME}
      GIT_PASSWORD: ${GIT_PASSWORD}

  registry-service:
    container_name: registry-service
    build: ./registry-service
    ports:
      - "8761:8761"
    environment:
      CONFIG_SERVER: http://config-service:8888
    depends_on:
      - config-service

  admin-service:
    container_name: admin-service
    build: ./admin-service
    ports:
      - "8081:8081"
    environment:
      CONFIG_SERVER: http://config-service:8888
    depends_on:
      - config-service
      - registry-service

  gateway-service:
    container_name: gateway-service
    build: ./gateway-service
    ports:
      - "8080:8080"
    environment:
      CONFIG_SERVER: http://config-service:8888
      KC_URL: http://host.docker.internal:9090/realms/Flexidorms
      CLIENT_SECRET: ${CLIENT_SECRET}
    depends_on:
      - config-service
      - registry-service
      - keycloak

  account-service:
    container_name: account-service
    build: ./account-service
    ports:
      - "8090:8090"
    environment:
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      CONFIG_SERVER: http://config-service:8888
    depends_on:
      - config-service
      - registry-service
      - kafka1

  rooms-service:
    container_name: rooms-service
    build: ./rooms-service
    ports:
      - "8091:8091"
    environment:
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      CONFIG_SERVER: http://config-service:8888
    depends_on:
      - config-service
      - registry-service

  bookings-service:
    container_name: bookings-service
    build: ./bookings-service
    ports:
      - "8092:8092"
    environment:
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      CONFIG_SERVER: http://config-service:8888
    depends_on:
      - config-service
      - registry-service
      - kafka1

  notification-service:
    container_name: notification-service
    build: ./notification-service
    ports:
      - "8093:8093"
    environment:
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      CONFIG_SERVER: http://config-service:8888
    depends_on:
      - config-service
      - registry-service
      - kafka1

  payments-service:
    container_name: payments-service
    build: ./payments-service
    ports:
      - "8094:8094"
    environment:
      STRIPE_APIKEY: ${STRIPE_APIKEY}
      CONFIG_SERVER: http://config-service:8888
    depends_on:
      - config-service
      - registry-service
      - kafka1
